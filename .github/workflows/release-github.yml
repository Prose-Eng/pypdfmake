name: Release

on:
    push:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                  version: 'latest'

            - name: Set up Python
              run: uv python install

            - name: Install dependencies
              run: uv sync --all-extras --dev

            - name: Run tests
              run: poe test-no-watch

    build-and-release:
        runs-on: ubuntu-latest
        needs: test
        if: success() # Only run if tests pass
        steps:
            - name: Build project
              run: uv build

            - name: Get version
              id: version
              run: poe version >> $GITHUB_OUTPUT

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ steps.version.outputs.version }}
                  release_name: Release v${{ steps.version.outputs.version }}
                  draft: false
                  prerelease: false

            - name: Upload wheel
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/*.whl
                  asset_name: pypdfmake-${{ steps.version.outputs.version }}-py3-none-any.whl
                  asset_content_type: application/zip

            - name: Upload source distribution
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./dist/*.tar.gz
                  asset_name: pypdfmake-${{ steps.version.outputs.version }}.tar.gz
                  asset_content_type: application/gzip
